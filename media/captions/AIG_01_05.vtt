WEBVTT

00:00:01.536 --> 00:00:03.900
DNS Zone Transfers

00:00:04.725 --> 00:00:10.566
A zone transfer is basically a database
replication between related DNS servers

00:00:10.566 --> 00:00:16.566
in which the zone file is copied from
a master DNS server to a slave server.

00:00:16.922 --> 00:00:21.833
The zone file contains a list of all
the DNS names configured for that zone.

00:00:22.165 --> 00:00:27.233
Zone transfers should only be allowed
to authorized slave DNS servers

00:00:27.233 --> 00:00:30.833
but many administrators
misconfigure their DNS servers,

00:00:30.833 --> 00:00:36.266
and in these cases, anyone asking
for a copy of the DNS server’s zone

00:00:36.266 --> 00:00:38.266
will usually receive one.

00:00:38.266 --> 00:00:42.700
This is equivalent to handing a
hacker the corporate network layout

00:00:42.700 --> 00:00:44.200
on a silver platter.

00:00:44.200 --> 00:00:48.466
All the names, addresses,
and functionality of the servers

00:00:48.466 --> 00:00:50.800
can be exposed to prying eyes.

00:00:51.270 --> 00:00:55.766
A successful zone transfer does not
directly result in a network breach,

00:00:55.766 --> 00:00:58.533
although it does facilitate the process.

00:00:59.333 --> 00:01:03.000
The host command can be used
to perform a zone transfer

00:01:03.000 --> 00:01:05.233
with the -l option

00:01:05.233 --> 00:01:07.133
followed by the domain name

00:01:07.133 --> 00:01:09.033
and a DNS server.

00:01:10.568 --> 00:01:15.400
Let’s begin by finding the
DNS servers for megacorpone.com.

00:01:17.074 --> 00:01:23.266
The domain has three DNS servers:
ns1, ns2, and ns3.

00:01:23.266 --> 00:01:26.700
Let’s try a zone transfer
against each one.

00:01:29.475 --> 00:01:33.966
We’ll use host -l to attempt
the zone transfers:

00:01:35.744 --> 00:01:40.066
Unfortunately, it looks like
the first nameserver, ns1,

00:01:40.066 --> 00:01:44.733
 does not allow DNS zone transfers,
so our attempt has failed.

00:01:47.141 --> 00:01:51.700
Let’s try to perform the same steps using
the second nameserver, ns2:

00:01:54.326 --> 00:01:57.200
This server allows zone transfers

00:01:57.200 --> 00:02:03.500
and provides a full dump of the zone file
for the megacorpone.com domain.

00:02:03.500 --> 00:02:07.533
It delivers a convenient list
of IP addresses

00:02:07.533 --> 00:02:10.233
and corresponding DNS hostnames!

00:02:10.233 --> 00:02:15.700
The megacorpone.com domain has
very few DNS servers to check.

00:02:15.700 --> 00:02:18.733
However, some larger organizations

00:02:18.733 --> 00:02:21.266
might host many DNS servers,

00:02:21.266 --> 00:02:24.533
or we might want to attempt
\zone transfer requests

00:02:24.533 --> 00:02:27.300
against all the DNS servers
in a given domain.

00:02:27.700 --> 00:02:30.366
Bash scripting can help with this task.

00:02:33.279 --> 00:02:36.033
To attempt a zone transfer
with the host command,

00:02:36.033 --> 00:02:37.900
we need two parameters:

00:02:37.900 --> 00:02:40.766
a nameserver address and a domain name.

00:02:41.087 --> 00:02:45.733
We can get a clean list of the nameservers
for a given domain with the host command,

00:02:45.733 --> 00:02:47.866
piping the results into cut.

00:02:50.160 --> 00:02:52.033
Taking this a step further,

00:02:52.033 --> 00:02:53.400
we can write a Bash script

00:02:53.400 --> 00:02:57.033
to automate the process of identifying
the relevant nameservers

00:02:57.033 --> 00:02:59.900
and attempting a zone transfer from each:

00:03:03.845 --> 00:03:07.533
Our script will identify the nameservers
for the given domain…

00:03:08.439 --> 00:03:11.700
…and attempt a zone transfer against
each one of them.

00:03:12.663 --> 00:03:17.400
Let’s make the script executable and run
it against megacorpone.com.

00:03:26.528 --> 00:03:27.528
Great.

00:03:27.998 --> 00:03:32.333
Just a few lines in a script has automated
our task quite nicely.
