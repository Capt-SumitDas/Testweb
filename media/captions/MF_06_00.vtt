WEBVTT

00:00:01.653 --> 00:00:03.766
Metasploit Automation

00:00:05.210 --> 00:00:08.833
While the Metasploit Framework
automates quite a bit for us,

00:00:08.833 --> 00:00:11.633
we can further automate
repetitive commands

00:00:11.633 --> 00:00:14.700
inside the Metasploit Framework itself.

00:00:15.095 --> 00:00:18.733
When we use a payload to create
a standalone executable

00:00:18.733 --> 00:00:22.966
or a client-side attack vector
like an HTML application,

00:00:22.966 --> 00:00:29.633
 we select options like payload
type, local host, and local port.

00:00:30.355 --> 00:00:34.433
The same options must then be set
in the multi/handler module.

00:00:35.108 --> 00:00:39.700
To streamline this, we can take advantage
of Metasploit resource scripts.

00:00:40.398 --> 00:00:44.433
We can use any number of Metasploit
commands in a resource script.

00:00:45.062 --> 00:00:51.166
For example, let’s create a script in our
home directory named setup.rc.

00:00:52.284 --> 00:00:56.000
The script starts by using the
multi/handler module.

00:00:57.280 --> 00:01:02.666
We will set the payload to windows
reverse https meterpreter payload,

00:01:03.901 --> 00:01:08.900
and configure the relevant
LHOST and LPORT parameters.

00:01:10.111 --> 00:01:12.666
We’ll also enable stage encoding…

00:01:13.551 --> 00:01:17.800
using the x86/shikata_ga_nai encoder…

00:01:19.034 --> 00:01:24.300
and configure the windows
post exploitation migrate module

00:01:24.300 --> 00:01:29.800
to be executed automatically
using the AutoRunScript option.

00:01:31.453 --> 00:01:34.756
This will cause the spawned
meterpreter to automatically

00:01:34.756 --> 00:01:40.666
launch a background notepad.exe
process and migrate to it.

00:01:41.365 --> 00:01:46.033
Finally, the ExitOnSession
parameter is set to false

00:01:46.033 --> 00:01:50.500
 to ensure that the listener
keeps accepting new connections,

00:01:51.478 --> 00:01:57.166
and the module is executed
with the -j and -z flags

00:01:57.166 --> 00:02:01.066
to stop us from automatically
interacting with the session.

00:02:04.280 --> 00:02:10.933
We can execute our resource script by
passing the -r flag to msfconsole.

00:02:17.012 --> 00:02:23.666
With the listener configured and running,
we can, for example, launch an executable

00:02:23.666 --> 00:02:28.066
containing a Meterpreter payload
from our Windows VM.

00:02:40.946 --> 00:02:44.533
When executed, our multi/handler
accepts the connection.

00:02:49.727 --> 00:02:53.366
The session was spawned
using second stage encoding,

00:02:54.694 --> 00:03:00.966
and successfully migrates automatically
into the notepad.exe process.
