WEBVTT

00:00:01.233 --> 00:00:02.800
The Empire Agent

00:00:04.027 --> 00:00:07.299
Now that we have our listener running
and our stager prepared,

00:00:07.299 --> 00:00:10.200
we will need to deploy
an agent on the victim.

00:00:10.200 --> 00:00:14.900
An agent is simply the final payload
retrieved by the stager,

00:00:14.900 --> 00:00:18.933
and it allows us to execute commands
and interact with the system.

00:00:20.046 --> 00:00:24.866
The stager deletes itself
and exits once it finishes execution.


00:00:26.058 --> 00:00:28.700
Once the agent is operational
on the target,

00:00:28.700 --> 00:00:33.500
it will set up an AES-encrypted
communication channel with the listener

00:00:33.500 --> 00:00:38.633
using the data portion of the HTTP GET
and POST requests.

00:00:38.633 --> 00:00:42.933
To deploy our agent, we need to copy the
launcher.bat script

00:00:42.933 --> 00:00:45.000
to the Windows 10 workstation

00:00:45.000 --> 00:00:47.333
and execute it from a command prompt.

00:00:47.640 --> 00:00:52.566
We’ll start by setting up a
python webserver listening on port 8000.

00:00:56.300 --> 00:01:01.166
Then we’ll connect to the
Windows 10 client via remote desktop.

00:01:06.618 --> 00:01:09.000
And we’ll use a powershell one-liner 

00:01:09.000 --> 00:01:11.733
to download the
batch file from our Kali machine.

00:01:16.712 --> 00:01:19.466
Finally, we can run the batch script.

00:01:22.867 --> 00:01:26.600
Once we run the script,
our command prompt closes,

00:01:26.600 --> 00:01:28.600
which is expected behavior.

00:01:28.985 --> 00:01:31.333
Let’s switch back to Empire.

00:01:37.118 --> 00:01:41.433
Back in Empire, we see that we have
received the initial agent call.

00:01:41.433 --> 00:01:47.200
Next, we can use the agents command
to display all active agents.

00:01:49.479 --> 00:01:53.500
Now, we can use interact
followed by the agent name

00:01:53.500 --> 00:01:56.733
to interact with our agent
and execute commands.

00:01:58.223 --> 00:02:01.400
Let’s run sysinfo
to retrieve information

00:02:01.400 --> 00:02:03.233
about the compromised host.

00:02:09.790 --> 00:02:13.500
Note that the command
does not return immediately.

00:02:13.955 --> 00:02:17.600
This delay is caused by
the DefaultDelay parameter,

00:02:17.600 --> 00:02:21.600
which is currently set to the default value of five seconds.

00:02:21.600 --> 00:02:25.766
The help command shows
all available commands.

00:02:27.064 --> 00:02:29.766
These include commands such as upload,

00:02:29.766 --> 00:02:33.200
download, and exit,
which are self-explanatory.

00:02:34.234 --> 00:02:38.700
In addition, we can use shell
to execute a command and spawn

00:02:38.700 --> 00:02:42.000
to create an additional agent on the same host.

00:02:42.762 --> 00:02:46.566
As with a meterpreter payload,
Empire allows us to migrate

00:02:46.566 --> 00:02:49.266
our payload into a different process.

00:02:50.467 --> 00:02:55.066
We can do that by first using
ps to view all running processes.

00:03:07.496 --> 00:03:13.366
Once we choose our target process,
we’ll migrate the process with psinject,

00:03:13.366 --> 00:03:15.300
including the name of the listener

00:03:15.300 --> 00:03:18.600
and the process ID as
our command arguments.

00:03:23.254 --> 00:03:24.700
It is important to note that,

00:03:24.700 --> 00:03:28.000
unlike the migration feature
of the meterpreter payload,

00:03:28.000 --> 00:03:30.833
once the process migration is completed,

00:03:30.833 --> 00:03:34.560
the original Empire agent
remains active

00:03:34.560 --> 00:03:37.700
and we have to manually switch to the
newly created one.
