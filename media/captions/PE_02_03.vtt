WEBVTT

00:00:01.148 --> 00:00:02.766
Lateral Movement

00:00:03.371 --> 00:00:05.766
Once we gain valid user credentials,

00:00:05.766 --> 00:00:10.266
we can begin to use these credentials to
\attempt to log in to other systems

00:00:10.266 --> 00:00:13.100
in a procress known as lateral movement.

00:00:13.678 --> 00:00:18.100
In our labs, the domain controller
is located on an internal network,

00:00:18.100 --> 00:00:21.133
meaning we can not reach it
from our Kali VM.

00:00:21.694 --> 00:00:24.766
To demonstrate the mechanics of
lateral movement with Empire,

00:00:24.766 --> 00:00:28.100
we’ll obtain another shell on
the Windows 10 client

00:00:28.100 --> 00:00:30.366
in the context of a different user.

00:00:31.059 --> 00:00:34.966
Although this example is simplified
because of the single target VM,

00:00:34.966 --> 00:00:37.566
the mechanics of the process are the same

00:00:37.566 --> 00:00:41.766
when moving to an actual remote host
in a real-world situation.

00:00:42.906 --> 00:00:45.966
There are various vectors in 
the lateral movement category

00:00:45.966 --> 00:00:48.966
 that we can use to invoke
an Empire agent

00:00:48.966 --> 00:00:50.566
on a remote host.

00:00:52.389 --> 00:00:57.033
As an example, we will try out
the invoke smbexec module.

00:00:58.926 --> 00:01:02.000
This module requires several parameters.

00:01:03.630 --> 00:01:07.866
We’ll set ComputerName to the
hostname of the Windows 10 client

00:01:07.866 --> 00:01:11.000
and set Listener to “http”.

00:01:14.769 --> 00:01:19.033
We will also set the Username,
Domain, and Hash parameters

00:01:19.033 --> 00:01:22.700
using the relevant data from the jeff_admin user account

00:01:22.700 --> 00:01:24.733
found in the previous section.

00:01:31.044 --> 00:01:34.000
Let’s execute this module
and see what happens.

00:01:37.962 --> 00:01:38.962
Excellent!

00:01:38.962 --> 00:01:41.466
The agent was successfully deployed

00:01:41.466 --> 00:01:43.400
and we can now interact with it.
