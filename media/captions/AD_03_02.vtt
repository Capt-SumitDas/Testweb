WEBVTT

00:00:01.483 --> 00:00:03.333
Kerberos Authentication

00:00:04.620 --> 00:00:07.278
The Kerberos authentication
protocol has been used as

00:00:07.278 --> 00:00:13.300
Microsoft’s primary authentication
mechanism since Windows Server 2003.

00:00:14.019 --> 00:00:18.533
While NTLM authentication works through a
principle of challenge and response,

00:00:18.533 --> 00:00:22.966
Windows-based Kerberos authentication
uses a ticket system.

00:00:23.730 --> 00:00:27.733
At a high level, Kerberos client
authentication to a service

00:00:27.733 --> 00:00:32.233
in Active Directory involves the
use of a domain controller

00:00:32.233 --> 00:00:38.066
in the role of a key distribution
center, or KDC.

00:00:39.048 --> 00:00:41.066
Let’s review this process in detail

00:00:41.066 --> 00:00:44.233
in order to lay a foundation
for further discussion.

00:00:46.414 --> 00:00:51.933
When a user logs in to their workstation,
a request is sent to the domain controller

00:00:51.933 --> 00:00:54.333
which has the role of KDC

00:00:54.333 --> 00:00:58.633
and also maintains the
Authentication Server service.

00:00:59.505 --> 00:01:06.000
This Authentication Server Request
contains a time stamp that is encrypted

00:01:06.000 --> 00:01:10.533
using a hash derived from the
password of the user and the username.

00:01:11.514 --> 00:01:15.765
When the domain controller receives the
request, it looks up the password hash

00:01:15.765 --> 00:01:20.833
associated with the specific user and
attempts to decrypt the time stamp.

00:01:21.553 --> 00:01:26.400
If the decryption process is successful
and the time stamp is not a duplicate,

00:01:26.400 --> 00:01:29.833
the authentication is
considered successful.

00:01:30.727 --> 00:01:34.633
The domain controller replies to
the client with an Authentication

00:01:34.633 --> 00:01:38.133
Server Reply which contains
a session key,

00:01:38.133 --> 00:01:44.400
since Kerberos is stateless, and
a Ticket Granting Ticket, or TGT.

00:01:45.606 --> 00:01:48.866
The session key is encrypted
using the user’s password hash,

00:01:48.866 --> 00:01:52.866
and may be decrypted by
the client and reused.

00:01:53.630 --> 00:01:57.200
The Ticket Granting Ticket contains
information regarding the user,

00:01:57.200 --> 00:02:01.666
including group memberships,
the domain, a time stamp,

00:02:01.666 --> 00:02:05.600
 the IP address of the client
and the session key.

00:02:06.341 --> 00:02:10.900
In order to avoid tampering, the TGT
is encrypted by a secret key

00:02:10.900 --> 00:02:16.166
known only to the KDC and can
not be decrypted by the client.

00:02:17.061 --> 00:02:20.533
Once the client has received the session
key and the Ticket Granting Ticket,

00:02:20.533 --> 00:02:25.000
the KDC considers the client
authentication complete.

00:02:26.003 --> 00:02:30.600
When the user wishes to access resources
of the domain, such as a network share,

00:02:30.600 --> 00:02:33.913
an Exchange mailbox, or
some other application with a

00:02:33.913 --> 00:02:39.433
registered service principal name, it
must again contact the KDC.

00:02:40.305 --> 00:02:45.024
This time, the client constructs a
Ticket Granting Service Request packet

00:02:45.024 --> 00:02:48.500
 that consists of the current
user and a timestamp

00:02:48.500 --> 00:02:53.166
(encrypted using the session key),
the SPN of that resource,

00:02:53.166 --> 00:02:56.366
and the encrypted Ticket Granting Ticket.

00:02:57.261 --> 00:03:02.689
Next, the ticket granting service on
the KDC receives the Ticket Granting

00:03:02.689 --> 00:03:08.633
Service Request, and if the SPN exists in
the domain, the TGT is decrypted

00:03:08.633 --> 00:03:12.566
using the secret key known
only to the KDC.

00:03:13.482 --> 00:03:16.866
The session key is then extracted
from the Ticket Granting Ticket

00:03:16.866 --> 00:03:21.533
and used to decrypt the username
and timestamp of the request.

00:03:22.645 --> 00:03:27.300
At this point the KDC performs
several checks and if this verification

00:03:27.300 --> 00:03:32.630
process succeeds, the ticket granting
service responds to the client

00:03:32.630 --> 00:03:35.800
with a Ticket Granting Server Reply.

00:03:37.130 --> 00:03:44.000
This packet contains three parts: the SPN,
a session key, and a service ticket

00:03:44.000 --> 00:03:46.833
containing the username
and group memberships

00:03:46.833 --> 00:03:50.000
along with the newly-created
session key.

00:03:50.872 --> 00:03:56.983
The first two parts, SPN and session key
are encrypted using the session key

00:03:56.983 --> 00:04:02.800
associated with the creation of the Ticket
Granting Ticket and the service ticket

00:04:02.800 --> 00:04:07.030
is encrypted using the password
hash of the service account

00:04:07.030 --> 00:04:10.000
registered with the
SPN in question.

00:04:11.221 --> 00:04:14.266
Once the authentication process
by the KDC is complete

00:04:14.266 --> 00:04:18.933
and the client has both a
session key and a service ticket,

00:04:18.941 --> 00:04:21.833
the service authentication begins.

00:04:22.356 --> 00:04:27.633
First, the client sends an application
request to the application server,

00:04:27.633 --> 00:04:32.833
which includes the username and a time
stamp encrypted with the session key

00:04:32.833 --> 00:04:37.900
associated with the service ticket
along with the service ticket itself.

00:04:38.903 --> 00:04:42.100
The application server decrypts
the service ticket

00:04:42.100 --> 00:04:44.633
using the service account
password hash

00:04:44.633 --> 00:04:48.200
and extracts the username
and the session key.

00:04:48.963 --> 00:04:53.966
It then uses the session key to decrypt
the username from the application request.

00:04:54.621 --> 00:04:58.269
If the application request username
matches the one decrypted

00:04:58.269 --> 00:05:01.700
from the service ticket,
the request is accepted.

00:05:02.507 --> 00:05:06.833
Before access is granted, the service
inspects the supplied group

00:05:06.833 --> 00:05:10.900
memberships in the service ticket
and assigns appropriate permissions

00:05:10.900 --> 00:05:16.500
to the user, after which the user
may access the requested service.

00:05:18.485 --> 00:05:23.100
This protocol may seem complicated
and perhaps even convoluted,

00:05:23.109 --> 00:05:26.866
but it was designed to mitigate
various network attacks

00:05:26.866 --> 00:05:30.166
and prevent the use
of fake credentials.

00:05:31.191 --> 00:05:35.933
Now that we have explored the foundations
of both NTLM and Kerberos authentication,

00:05:35.933 --> 00:05:42.333
let’s explore various cached credential
storage and service account attacks.
