WEBVTT

00:00:01.680 --> 00:00:05.500
Linux Kernel Vulnerabilities:
Case Study

00:00:06.115 --> 00:00:09.566
Kernel exploits are an excellent
way to escalate privileges,

00:00:09.566 --> 00:00:13.966
but success depends on matching
not only the target’s kernel version

00:00:13.966 --> 00:00:20.133
but also the operating system flavor,
such as Debian or Redhat for example.

00:00:20.581 --> 00:00:23.633
Similar to our Windows examples,
this section of the module

00:00:23.633 --> 00:00:27.100
will not be reproducible
on your dedicated client.

00:00:30.981 --> 00:00:34.033
We will start with gathering
information about our target

00:00:34.033 --> 00:00:36.900
by inspecting the issue file.

00:00:39.045 --> 00:00:43.333
As discussed earlier in the module,
this file contains a message

00:00:43.333 --> 00:00:49.633
or system identification to be printed
before the login prompt on Linux machines.

00:00:50.043 --> 00:00:53.466
We can enumerate the kernel
version and system architecture

00:00:53.466 --> 00:00:55.900
with standard system commands:

00:00:59.855 --> 00:01:06.233
Our target system appears to
be running Ubuntu 16.04.3 LTS,

00:01:06.625 --> 00:01:09.866
with generic 4.8.0 kernel,

00:01:10.725 --> 00:01:14.866
on the x86_64 architecture.

00:01:16.191 --> 00:01:19.433
Armed with this information,
we can use searchsploit

00:01:19.433 --> 00:01:23.233
to find kernel exploits
matching the target version.

00:01:26.405 --> 00:01:30.544
The second last exploit seems
to match the kernel version

00:01:30.544 --> 00:01:32.533
that our target is running.

00:01:35.593 --> 00:01:40.100
Compiling C/C++ Code on Linux

00:01:40.771 --> 00:01:44.600
We’ll use gcc on Linux to
compile our exploit.

00:01:45.085 --> 00:01:47.633
Keep in mind that when
compiling code,

00:01:47.633 --> 00:01:50.900
we must match the architecture
of our target.

00:01:51.273 --> 00:01:55.366
This is especially important in
situations where the target machine

00:01:55.366 --> 00:01:59.766
does not have a compiler and
we are forced to compile the exploit

00:01:59.766 --> 00:02:05.300
on our attacking machine or on
a VM meant to replicate the target OS.

00:02:05.523 --> 00:02:09.466
Fortunately, the target machine has
a working compiler we can use.

00:02:09.727 --> 00:02:12.466
Let’s copy the exploit to the target,

00:02:17.523 --> 00:02:18.900
and compile it.

00:02:19.851 --> 00:02:22.733
After compiling the exploit,
we can run it,

00:02:28.275 --> 00:02:32.333
and use whoami to check
our privilege level.

00:02:34.236 --> 00:02:37.200
The output shows that our
privileges were successfully

00:02:37.200 --> 00:02:40.700
elevated from a standard
user to root.

00:02:41.129 --> 00:02:42.533
Very nice!
