WEBVTT

00:00:01.000 --> 00:00:05.166
The Non-Interactive Shell

00:00:05.166 --> 00:00:09.766
Most Netcat-like tools provide a 
non-interactive shell

00:00:09.766 --> 00:00:12.800
This means programs that require 
user input - 

00:00:12.800 --> 00:00:17.233
like file transfer programs, su and 
sudo – 

00:00:17.233 --> 00:00:21.333
tend to work poorly in these shells, 
if they work at all.

00:00:21.333 --> 00:00:24.500
Non-interactive shells also lack useful 
features 

00:00:24.500 --> 00:00:27.466
like tab completion and job control.

00:00:27.466 --> 00:00:30.966
An example will help illustrate 
this problem.

00:00:30.966 --> 00:00:35.466
Let’s first connect to our Debian 
lab client via SSH.

00:00:40.000 --> 00:00:44.600
You’re already familiar with the ls 
command, which is non-interactive, 

00:00:44.600 --> 00:00:47.666
because it can complete without 
user interaction.

00:00:49.900 --> 00:00:54.866
By contrast, consider a typical FTP login 
session 

00:00:54.866 --> 00:00:58.466
from our Debian lab client to our 
Kali system:

00:01:05.466 --> 00:01:10.333
In this session, we enter a username and 
password, and the process exits 

00:01:10.333 --> 00:01:13.700
only after we enter the bye command.

00:01:15.400 --> 00:01:20.600
This is an interactive program; it 
requires user intervention to complete.

00:01:22.633 --> 00:01:25.366
Although the problem may be 
obvious at this point, 

00:01:25.366 --> 00:01:29.633
let’s attempt an FTP session through a 
non-interactive shell, 

00:01:29.633 --> 00:01:32.033
in this case, Netcat.

00:01:32.033 --> 00:01:35.266
To begin, let's assume we've compromised
a debian client

00:01:35.266 --> 00:01:38.666
and have obtained access to a netcat 
bind shell

00:01:38.666 --> 00:01:43.966
we’ll launch a Netcat bind shell
listening on port 4444 

00:01:43.966 --> 00:01:45.666
to simulate this.

00:01:45.666 --> 00:01:50.066
From our Kali system, we’ll connect to 
the listening shell.

00:01:52.900 --> 00:01:56.800
Now let’s attempt the FTP login again:

00:02:02.100 --> 00:02:05.800
Behind the scenes, we’re interacting 
with the FTP server, 

00:02:05.800 --> 00:02:09.100
but we’re not receiving any 
feedback in our shell.

00:02:09.100 --> 00:02:12.400
This is because the standard output 
from the FTP session

00:02:12.400 --> 00:02:17.866
is not redirected correctly in a basic 
bind or reverse shell.

00:02:18.466 --> 00:02:21.700
This results in the loss of control of 
our shell 

00:02:21.700 --> 00:02:26.000
and we’re forced to exit it completely 
with control-c

00:02:27.800 --> 00:02:31.933
This could present a huge problem 
for us during an assessment.

00:02:32.966 --> 00:02:36.400
Upgrading a Non-Interactive Shell

00:02:36.400 --> 00:02:40.866
Now that we understand some of the 
limitations of non-interactive shells,

00:02:40.866 --> 00:02:45.433
let’s examine how we can “upgrade” 
our shell to be far more useful.

00:02:50.066 --> 00:02:54.000
The Python interpreter, frequently 
installed on Linux systems, 

00:02:54.000 --> 00:02:57.433
comes with a standard module named pty 

00:02:57.433 --> 00:03:00.966
which allows for creation of 
pseudo-terminals.

00:03:00.966 --> 00:03:04.533
We can use this module to spawn 
a separate process 

00:03:04.533 --> 00:03:07.533
and upgrade to a fully interactive shell.

00:03:10.033 --> 00:03:13.866
First, we’ll reconnect to our listening 
Netcat shell…

00:03:19.266 --> 00:03:23.000
…and invoke our pty shell:

00:03:24.833 --> 00:03:27.300
Immediately after running our Python 
command, 

00:03:27.300 --> 00:03:30.800
we’re greeted with a familiar Bash prompt.

00:03:31.866 --> 00:03:36.100
Let’s try connecting to our local FTP 
server again, 

00:03:36.100 --> 00:03:40.033
this time through the pty shell and 
see how it behaves:

00:03:45.566 --> 00:03:50.766
This time, our interactive connection 
to the FTP server was successful…

00:03:52.333 --> 00:03:57.200
…and when we quit, we are returned to 
our upgraded Bash prompt.

00:04:02.033 --> 00:04:05.866
This technique effectively provides an 
interactive shell 

00:04:05.866 --> 00:04:08.900
through a traditionally non-interactive 
channel.
