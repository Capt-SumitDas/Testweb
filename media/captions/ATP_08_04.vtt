WEBVTT

00:00:00.708 --> 00:00:02.633
Privilege Escalation

00:00:03.599 --> 00:00:08.133
The Juicy Potato source code
can be found on its github page.

00:00:10.196 --> 00:00:15.118
After a review of the code, we do not
find anything that raises concerns,

00:00:15.118 --> 00:00:18.866
so we can deem this exploit to
be safe to run against our target.

00:00:19.521 --> 00:00:23.966
While the Juicy Potato binary can be
downloaded directly from the GitHub page,

00:00:23.966 --> 00:00:28.600
we recommend only using exploit
binaries that we have compiled.

00:00:28.829 --> 00:00:33.766
However, Juicy Potato requires tools
that you, as a student

00:00:33.766 --> 00:00:36.233
may not have at your disposal.

00:00:36.642 --> 00:00:40.037
Instead, we will use a binary that
we compiled, which can be found

00:00:40.037 --> 00:00:44.500
on your Windows 10 PWK
client in the labs.

00:00:44.860 --> 00:00:49.700
We have already transfered this binary
to our Kali machine so let’s continue.

00:00:50.256 --> 00:00:52.534
We’ll use our existing meterpreter shell

00:00:52.534 --> 00:00:56.533
to upload the Juicy Potato
binary to Cevapi.

00:01:01.397 --> 00:01:04.766
Next, we will background our
current meterpreter session

00:01:04.766 --> 00:01:06.700
and start a new listener.

00:01:16.002 --> 00:01:22.166
Now let’s edit the Item configuration in
Jenkins to run the Juicy Potato command.

00:01:35.448 --> 00:01:37.266
Before we run Juicy Potato,

00:01:37.266 --> 00:01:41.200
there are some mandatory
arguments we must establish.

00:01:51.108 --> 00:01:57.133
The first required flag ( -t ) is
the “Process creation mode”.

00:01:57.198 --> 00:02:01.933
The documentation states that we
need CreateProcessWithToken

00:02:01.933 --> 00:02:06.500
if we have the SeImpersonate
privilege, which we do.

00:02:06.712 --> 00:02:10.466
To direct Juicy Potato to use
CreateProcessWithToken,

00:02:10.466 --> 00:02:12.833
we will pass the “t” value.

00:02:13.439 --> 00:02:18.300
Next, the -p flag specifies the
program we are trying to run.

00:02:18.300 --> 00:02:23.966
In this case, we can use the same
backdoored whoami.exe binary

00:02:23.966 --> 00:02:25.533
that we used previously.

00:02:25.926 --> 00:02:30.566
Finally, Juicy Potato allows us
to specify an arbitrary port

00:02:30.566 --> 00:02:35.100
for the COM server to listen
on with the -l flag.

00:02:36.492 --> 00:02:41.866
We’ll also check the Execute concurrent
builds if necessary checkbox

00:02:41.866 --> 00:02:47.666
to allow us to run both the old
build and the new build simultaneously.

00:02:47.666 --> 00:02:51.418
While this isn’t necessary, it is nice
to have a fallback to the

00:02:51.418 --> 00:02:54.366
old low-privilege shell if needed.

00:02:57.298 --> 00:03:01.400
Once the configuration is
saved, we select Build Now

00:03:01.400 --> 00:03:04.000
and wait for the meterpreter shell.

00:03:04.999 --> 00:03:08.352
The build will show as failed, however,

00:03:08.352 --> 00:03:13.833
if we switch to msfconsole, we
still obtain a SYSTEM shell.

00:03:15.389 --> 00:03:16.433
Nice!
