WEBVTT

00:00:01.505 --> 00:00:03.933
Exploiting Admin Consoles

00:00:05.079 --> 00:00:09.433
Let’s begin with admin console
enumeration and exploitation.

00:00:09.983 --> 00:00:12.433
Once we’ve located an admin console,

00:00:12.433 --> 00:00:15.800
the simplest “exploit”
is to just log into it.

00:00:16.204 --> 00:00:19.633
We may attempt default
username/password pairs,

00:00:19.633 --> 00:00:23.466
use enumerated information
to guess working credentials,

00:00:23.466 --> 00:00:25.766
or attempt brute force.

00:00:26.238 --> 00:00:30.333
However, a light touch is
usually best with brute force.

00:00:30.839 --> 00:00:34.100
Account lockouts will negatively
affect our penetration test,

00:00:34.100 --> 00:00:36.500
will block legitimate administrators,

00:00:36.500 --> 00:00:39.600
and may alert blue teams to our presence.

00:00:40.229 --> 00:00:44.800
As always, we must carefully weigh
the risks of every attack vector

00:00:44.800 --> 00:00:48.566
and act carefully and in the
best interest of our client.

00:00:49.252 --> 00:00:54.033
Despite these risks, a compromised
administration console is a prime target

00:00:54.033 --> 00:00:58.266
and may allow us to deploy
and run code on the server,

00:00:58.266 --> 00:01:01.166
which can provide a quick path to a shell.

00:01:01.672 --> 00:01:05.400
To demonstrate this, we will work though
an example of an attack against a

00:01:05.400 --> 00:01:10.966
 poorly-configured admin console installed
on our Windows 10 target.

00:01:11.337 --> 00:01:15.066
Note that the IP addresses
used in the rest of this module

00:01:15.066 --> 00:01:17.166
may not match your lab.

00:01:17.683 --> 00:01:21.566
Refer to the control panel
for your assigned IP addresses.

00:01:30.522 --> 00:01:33.666
To begin, we will set up
the Windows 10 target

00:01:33.666 --> 00:01:36.566
by opening the XAMPP Control panel,

00:01:43.803 --> 00:01:48.600
and clicking Start for both
Apache and MySQL.

00:01:55.600 --> 00:02:00.766
Next, we’ll run DIRB from Kali,
targeting our Windows 10 machine.

00:02:07.605 --> 00:02:12.900
Once again, we’ll run our dirb scan
non-recursively with -r.

00:02:18.923 --> 00:02:25.366
The output lists several interesting URLs
including one for phpmyadmin,

00:02:25.366 --> 00:02:31.200
an administration tool for MySQL databases,
which is particularly interesting.

00:02:31.995 --> 00:02:38.733
Entering the corresponding URL into our
browser produces a phpMyAdmin login page.

00:02:55.054 --> 00:03:00.500
An quick Internet search suggests that the
default login credentials for phpMYAdmin

00:03:00.500 --> 00:03:03.833
include “root” with a blank password.

00:03:04.847 --> 00:03:07.733
Let’s try that against our
Windows 10 target.

00:03:16.837 --> 00:03:18.400
After submitting the credentials,

00:03:18.400 --> 00:03:22.233
we receive an error message
that “Login without a password

00:03:22.233 --> 00:03:24.566
is forbidden by configuration”.

00:03:25.421 --> 00:03:29.400
This is because “AllowNoPassword”
is set to False

00:03:29.400 --> 00:03:32.900
within the phpMyAdmin
configuration file ().

00:03:33.546 --> 00:03:37.933
Under this configuration,
we need to include a password to log in

00:03:37.933 --> 00:03:41.466
so we can reasonably assume
the password is not blank.

00:03:42.092 --> 00:03:45.533
We will have to Try Harder
if we want to gain access.
