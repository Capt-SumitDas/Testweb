WEBVTT

00:00:01.394 --> 00:00:04.000
Post-Exploitation Modules

00:00:04.644 --> 00:00:07.544
In addition to native commands and actions

00:00:07.544 --> 00:00:10.266
present in the core APIs
of the Meterpreter,

00:00:10.266 --> 00:00:13.366
 there are several
post-exploitation modules

00:00:13.366 --> 00:00:16.500
we can deploy against
an active session.

00:00:17.040 --> 00:00:21.000
Sessions that were created by
execution of a client-side attack

00:00:21.000 --> 00:00:25.433
will likely provide us only
with an unprivileged shell.

00:00:25.956 --> 00:00:30.233
But if the target user is a member
of the local administrators group,

00:00:30.233 --> 00:00:34.200
we can elevate our shell
to a high integrity level

00:00:34.200 --> 00:00:39.566
if we bypass User
Account Control, or UAC.

00:00:40.141 --> 00:00:45.233
A search for UAC bypass modules
will yield quite a few results,

00:00:45.233 --> 00:00:50.833
but since the compromised host is running
Windows 10 Fall Creators Update,

00:00:50.833 --> 00:00:58.533
we will focus on the windows bypass
uac win sxs injection module

00:00:58.533 --> 00:01:01.833
as it works well on
this version of Windows.

00:01:02.844 --> 00:01:06.166
Selecting the module and
listing its options,

00:01:10.140 --> 00:01:16.566
reveals a single parameter named SESSION,
which is the target Meterpreter session.

00:01:17.821 --> 00:01:21.633
Setting the session option and
executing the module

00:01:21.633 --> 00:01:26.833
will essentially pipe the exploit
through the active session

00:01:26.833 --> 00:01:29.266
and directly to the host.

00:01:47.637 --> 00:01:50.966
Besides being able to background
an active session

00:01:50.966 --> 00:01:56.200
and execute modules through
it, we can also load extensions

00:01:56.200 --> 00:02:01.300
directly inside the active
session with the load command.

00:02:01.753 --> 00:02:05.533
One great example of this
is the PowerShell extension,

00:02:05.533 --> 00:02:10.066
which as the name suggests,
enables the use of PowerShell.

00:02:16.724 --> 00:02:21.500
With this module, we can execute
PowerShell commands and scripts,

00:02:21.796 --> 00:02:26.133
or launch an interactive
PowerShell command prompt.

00:02:28.468 --> 00:02:32.700
As an example, let’s use the
powershell_execute command

00:02:32.700 --> 00:02:36.566
to retrieve the PowerShell
version through the

00:02:36.566 --> 00:02:42.366
$PSVersionTable.PSVersion
global variable.

00:02:43.795 --> 00:02:48.366
The output provides us with the exact
version information of PowerShell

00:02:48.371 --> 00:02:50.333
on the compromised host.

00:02:50.856 --> 00:02:55.233
Mimikatz is incredibly
useful as well and luckily,

00:02:55.233 --> 00:02:59.933
an implementation of it is
available as a Meterpreter extension.

00:03:00.403 --> 00:03:04.866
In this example, we will run
the extension with “load kiwi”.

00:03:06.958 --> 00:03:12.833
Since mimikatz requires SYSTEM
rights, we will run getsystem

00:03:12.833 --> 00:03:19.000
to automatically acquire SYSTEM privileges
from our current high integrity shell.

00:03:22.189 --> 00:03:27.133
Finally, we will dump the system
credentials with creds_msv:
