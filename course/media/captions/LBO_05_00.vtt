WEBVTT

00:00:01.466 --> 00:00:03.866
Checking for Bad Characters

00:00:04.633 --> 00:00:08.966
To discover any bad characters that might
break the overflow or corrupt our

00:00:08.966 --> 00:00:11.633
shellcode, we used the same approach as
we did

00:00:11.633 --> 00:00:14.166
in the Windows Buffer Overflow module.

00:00:14.166 --> 00:00:18.100
We sent the whole range of characters
from 00 to 0F within our buffer and then

00:00:18.100 --> 00:00:23.533
monitored whether any of those bytes got
mangled, swapped, dropped, or changed in

00:00:23.533 --> 00:00:26.833
memory once they were processed by the
application.

00:00:27.100 --> 00:00:31.466
After running the proof of concept
multiple times and elimitating one bad

00:00:31.466 --> 00:00:36.166
character at a time, we came up with a
final list of bad characters for the

00:00:36.166 --> 00:00:42.400
Crossfire application which only appear
to be 00 and 20.
