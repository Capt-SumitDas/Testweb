WEBVTT

00:00:01.300 --> 00:00:03.233
NETSH

00:00:04.266 --> 00:00:09.100
Let’s take a look at another
Windows-based tool, netsh.

00:00:09.433 --> 00:00:12.933
For this section we will consider the
following scenario:

00:00:14.600 --> 00:00:16.933
We compromise a Windows 10 target

00:00:16.933 --> 00:00:20.900
through a remote vulnerability and obtain
SYSTEM privileges.

00:00:22.600 --> 00:00:25.300
After enumerating the compromised machine,

00:00:27.333 --> 00:00:31.400
we discover that in addition to being
connected to the current network,

00:00:31.400 --> 00:00:36.033
it has an additional network interface
that is connected to a different network.

00:00:36.700 --> 00:00:41.133
In this internal subnet we identify a
Windows Server 2016 machine

00:00:41.133 --> 00:00:43.566
that has port 445 open.

00:00:43.566 --> 00:00:48.933
To continue the scenario, we can now look
for ways to pivot inside the victim

00:00:48.933 --> 00:00:53.600
network from the SYSTEM-level shell on the
Windows 10 machine.

00:00:53.600 --> 00:00:59.100
Because of our privilege level, we do not
have to deal with User Account Control,

00:00:59.100 --> 00:01:02.500
which means we can use the netsh utility,

00:01:02.500 --> 00:01:06.933
that is installed by default on every
modern version of Windows,

00:01:06.933 --> 00:01:08.833
for port forwarding.

00:01:09.100 --> 00:01:14.633
However, for this to work, the Windows
system must have the IP Helper service

00:01:14.633 --> 00:01:21.266
running and IPv6 support must be enabled
for the interface we want to use.

00:01:21.266 --> 00:01:26.400
Fortunately, both are enabled by default
on Windows operating systems.

00:01:46.300 --> 00:01:51.200
We can check that the IP Helper service
is running from the Windows Services

00:01:51.200 --> 00:01:58.433
program, and we can confirm IPv6 support
in the network interface’s settings.

00:02:32.533 --> 00:02:36.200
Similar to the SSH local port forwarding
example,

00:02:36.200 --> 00:02:38.733
we will attempt to redirect traffic

00:02:38.733 --> 00:02:44.266
destined for the compromised Windows 10
machine on port 4455

00:02:44.266 --> 00:02:50.066
to the Windows Server 2016 machine on
port 445.

00:02:51.300 --> 00:02:56.633
In this example, we will use the netsh
interface context,

00:02:57.133 --> 00:03:03.400
to add an IP version 4 to IP version 4
proxy,

00:03:03.833 --> 00:03:10.533
listening on 10.11.0.22 port 4455,

00:03:11.600 --> 00:03:17.800
which will forward the traffic to port
445 on the Windows 2016 Server.

00:03:21.866 --> 00:03:23.300
Using netstat,

00:03:25.133 --> 00:03:31.633
we can confirm that port 4455 is
listening on the compromised Windows host.

00:03:33.300 --> 00:03:40.666
By default, the Windows Firewall will not
allow inbound connections on port 4455.

00:03:40.666 --> 00:03:43.733
However, we have SYSTEM privileges,

00:03:43.733 --> 00:03:50.166
so we can easily add a firewall rule to
allow inbound connections on that port.

00:03:51.200 --> 00:03:55.066
These netsh options are self-explanatory,

00:03:55.066 --> 00:03:56.966
but note that we allow,

00:03:56.966 --> 00:03:59.200
inbound connections,

00:03:59.200 --> 00:04:04.033
and leverage the firewall context of
netsh.

00:04:07.866 --> 00:04:12.400
As a final step, we can try to connect to
our compromised Windows machine

00:04:12.400 --> 00:04:16.800
on port 4455 using smbclient.

00:04:17.900 --> 00:04:20.033
As with our earlier scenario,

00:04:21.400 --> 00:04:27.833
Samba needs to be configured with a
minimum SMB version of SMBv2.

00:04:31.500 --> 00:04:35.833
If everything goes according to plan, the traffic will be redirected

00:04:35.833 --> 00:04:40.300
and the available network shares on the
internal Windows Server machine

00:04:40.300 --> 00:04:41.733
will be returned.

00:04:45.966 --> 00:04:49.000
We successfully listed the shares,

00:04:51.100 --> 00:04:54.633
but smbclient generated an error.

00:04:56.666 --> 00:05:00.700
This issue is generally caused by a port
forwarding error,

00:05:00.700 --> 00:05:04.600
but let’s test this and determine if we
can interact with the shares.

00:05:17.533 --> 00:05:24.766
The error restricted the ability to list
workgroups but it does not influence

00:05:24.766 --> 00:05:28.866
our ability to mount the share, proving
that the port forward was successful.
