WEBVTT

00:00:01.100 --> 00:00:03.033
Enumerating the Database

00:00:04.037 --> 00:00:08.300
We can also use SQL injection
attacks to enumerate the database.

00:00:08.698 --> 00:00:09.833
We will need this information

00:00:09.833 --> 00:00:14.566
as we start to build more
complicated SQL injection payloads.

00:00:15.089 --> 00:00:17.200
For example, we need to know column

00:00:17.200 --> 00:00:21.466
and table names if we are
going to extract data from them.

00:00:21.733 --> 00:00:26.100
This helps us execute a more
surgical data extraction.

00:00:26.519 --> 00:00:31.266
Let’s examine some techniques to retrieve
this information from the application.

00:00:31.651 --> 00:00:35.733
Our previous login form isn’t suitable
for a demonstration of this

00:00:35.733 --> 00:00:38.933
so we’ll turn to debug.php,

00:00:38.933 --> 00:00:43.033
which also contains a
SQL injection vulnerability.

00:00:48.685 --> 00:00:50.733
We can test if this page is vulnerable

00:00:50.733 --> 00:00:55.333
by adding a single quote as
the value of the the id parameter.

00:01:01.453 --> 00:01:04.186
This results in an SQL syntax error,

00:01:04.186 --> 00:01:09.066
indicating the presence of a
potential SQL injection vulnerability.
