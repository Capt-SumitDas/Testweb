WEBVTT

00:00:01.200 --> 00:00:04.700
From SQL Injection to Code Execution

00:00:05.963 --> 00:00:09.466
Let’s see how far we can
push this vulnerability.

00:00:10.477 --> 00:00:12.466
Depending on the operating system,

00:00:12.466 --> 00:00:14.066
service privileges,

00:00:14.066 --> 00:00:15.833
and filesystem permissions,

00:00:15.833 --> 00:00:19.600
SQL injection vulnerabilities
can be used to read

00:00:19.600 --> 00:00:24.100
and write files on the
underlying operating system.

00:00:24.880 --> 00:00:27.200
Writing a carefully crafted file

00:00:27.200 --> 00:00:29.300
containing PHP code

00:00:29.300 --> 00:00:32.033
into the root directory of the web server

00:00:32.033 --> 00:00:35.500
could then be leveraged
for full code execution.

00:00:36.326 --> 00:00:41.433
First, let’s see if we can read a
file using the load_file function.

00:00:44.602 --> 00:00:48.200
This should output the
contents of the hosts file.

00:00:50.071 --> 00:00:53.933
Next, we’ll try to use the
INTO OUTFILE function

00:00:53.933 --> 00:00:59.300
to create a malicious PHP file
in the server’s web root.

00:01:00.207 --> 00:01:02.766
Based on error messages
we’ve already seen,

00:01:02.766 --> 00:01:05.600
we should know the
location of the web root.

00:01:07.724 --> 00:01:11.433
We’ll attempt to write
a simple PHP one-liner,

00:01:11.433 --> 00:01:14.866
similar to the one
used in the LFI example.

00:01:19.390 --> 00:01:23.233
If this succeeds, the file should
be placed in the web root.

00:01:24.714 --> 00:01:26.666
This command produces an error message

00:01:26.666 --> 00:01:31.133
but this doesn’t necessarily mean the
file creation was unsuccessful.

00:01:31.759 --> 00:01:36.066
Let’s try to access the
newly-created backdoor.php page

00:01:36.066 --> 00:01:40.166
with a cmd parameter such as ipconfig.

00:01:46.499 --> 00:01:47.395
Excellent.

00:01:47.395 --> 00:01:52.800
We have now turned our SQL injection
vulnerability into code execution

00:01:52.800 --> 00:01:54.000
on the server.

00:02:04.724 --> 00:02:06.366
We can easily expand this

00:02:06.366 --> 00:02:10.700
to full shell access with
 the installation of a webshell.
