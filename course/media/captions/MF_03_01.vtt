WEBVTT

00:00:01.650 --> 00:00:05.383
Staged vs Non-Staged Payloads

00:00:06.266 --> 00:00:09.766
Before jumping into specific
shellcode functionality,

00:00:09.766 --> 00:00:15.700
we must discuss the distinction between
staged and non-staged shellcode,

00:00:15.700 --> 00:00:18.433
as evidenced by these descriptions:

00:00:20.945 --> 00:00:25.579
The difference between these
payloads is subtle but important.

00:00:26.020 --> 00:00:31.620
A non-staged payload is sent in its
entirety along with the exploit.

00:00:33.245 --> 00:00:38.545
In contrast, a staged payload
is usually sent in two parts.

00:00:39.900 --> 00:00:43.933
The first part contains a
small primary payload

00:00:43.945 --> 00:00:48.979
that causes the victim machine to connect
back to the attacker, transfer a larger 

00:00:48.979 --> 00:00:54.412
secondary payload containing the rest
of the shellcode, and then execute it.

00:00:54.833 --> 00:00:58.466
There are several situations
where we would prefer to use

00:00:58.466 --> 00:01:02.500
staged shellcode over non-staged.

00:01:02.945 --> 00:01:06.179
If the vulnerability we are exploiting
doesn’t have enough buffer space

00:01:06.179 --> 00:01:10.545
to hold a full payload, a staged
payload might be suitable.

00:01:11.020 --> 00:01:16.387
Since the first part of a staged payload
is typically smaller than a full payload,

00:01:16.387 --> 00:01:21.820
these smaller initial payloads can
likely help us in situations

00:01:21.820 --> 00:01:23.587
where space is limited.

00:01:24.087 --> 00:01:28.254
In addition, we need to keep in
mind that antivirus software will

00:01:28.254 --> 00:01:32.487
quite often detect embedded
shellcode in an exploit.

00:01:33.120 --> 00:01:37.787
By replacing that code with a staged
payload, we remove a good chunk of the

00:01:37.787 --> 00:01:43.054
malicious part of the shellcode, which
may increase our chances of success.

00:01:43.787 --> 00:01:48.054
After the initial stage is initiated
by the exploit, the remaining

00:01:48.066 --> 00:01:52.700
payload is injected directly into
the victim machine’s memory.

00:01:53.166 --> 00:01:57.333
Note that in Metasploit, the “/”
character is used to denote

00:01:57.333 --> 00:02:04.000
whether a payload is staged or not,
so “shell underscore reverse_tcp”

00:02:04.000 --> 00:02:10.400
is not staged, whereas
“shell slash reverse_tcp” is.
