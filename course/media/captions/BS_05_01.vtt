WEBVTT

00:00:01.466 --> 00:00:02.966
For Loops

00:00:03.366 --> 00:00:07.833
For loops are very practical and work 
very well in Bash one-liners.


00:00:07.966 --> 00:00:11.600
This type of loop is used to perform a 
given set of commands for

00:00:11.600 --> 00:00:13.466
each of the items in a list.


00:00:13.600 --> 00:00:16.433
Let’s briefly inspect its general syntax:


00:00:17.700 --> 00:00:21.966
The for loop will take each item in the 
list (in order)…


00:00:22.200 --> 00:00:26.800
…assign that item as the value of the 
variable var-name…


00:00:27.066 --> 00:00:30.833
…perform the given action between do and 
done…


00:00:31.110 --> 00:00:34.733
and then go back to the top, grab the 
next item in the list, 

00:00:34.733 --> 00:00:37.866
and repeat the steps until the list is 
exhausted.

00:00:39.166 --> 00:00:42.100
Let’s take a look at a more practical 
example that will quickly 

00:00:42.100 --> 00:00:45.800
print the first 10 IP addresses in a given 
subnet.

00:00:46.066 --> 00:00:50.233
In this Bash one-liner, we use the seq, 
or sequence, 

00:00:50.233 --> 00:00:52.966
command to print a sequence of numbers, 

00:00:52.966 --> 00:00:56.166
in this case the numbers one through ten.

00:00:56.466 --> 00:01:00.133
Each number is then assigned to the ip 
variable…


00:01:00.700 --> 00:01:03.766
and then each IP address is displayed to 
the screen 

00:01:03.766 --> 00:01:06.851
as the for loop runs multiple times…

00:01:06.933 --> 00:01:09.666
…executing at the end of the sequence.


00:01:11.033 --> 00:01:13.433
Another way of re-writing the previous 
for loop


00:01:13.433 --> 00:01:17.033
 involves brace expansion using ranges.

00:01:19.433 --> 00:01:21.633
With brace expansion using ranges, 

00:01:21.633 --> 00:01:25.166
we supply the first and last values of 
the range.

00:01:25.366 --> 00:01:28.500
This can be a sequence of numbers or 
characters.

00:01:28.833 --> 00:01:32.000
This is known as a “sequence expression”.


00:01:32.833 --> 00:01:35.633
There is a lot of potential for this type 
of loop.

00:01:37.133 --> 00:01:40.866
Displaying IP addresses to the screen may 
not seem very useful

00:01:40.866 --> 00:01:44.533
but we could use the same loop to ping 
each IP address, 

00:01:44.533 --> 00:01:47.633
run a port scan using nmap, etc.
