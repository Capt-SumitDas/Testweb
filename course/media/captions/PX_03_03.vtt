WEBVTT

00:00:01.702 --> 00:00:07.000
Insecure File Permissions:
/etc/passwd Case Study

00:00:07.751 --> 00:00:11.200
Linux passwords are usually
stored in /etc/shadow,

00:00:11.200 --> 00:00:14.033
which can’t be read by normal users.

00:00:14.390 --> 00:00:18.866
In the past however, password hashes,
along with other account information,

00:00:18.866 --> 00:00:23.000
were stored in the
world-readable /etc/passwd file.

00:00:23.356 --> 00:00:26.555
For backwards compatibility,
if a password hash is present

00:00:26.555 --> 00:00:31.966
in the passwd file user record,
it is considered valid for authentication

00:00:31.966 --> 00:00:35.333
and it takes precedence
over the shadow file.

00:00:35.652 --> 00:00:39.466
This means that if we can
write into the /etc/passwd file,

00:00:39.466 --> 00:00:42.666
we can add a new
password for any account.

00:00:42.910 --> 00:00:44.366
Let’s demonstrate this.

00:00:44.704 --> 00:00:47.700
In a previous section, we saw
that the passwd file was

00:00:47.700 --> 00:00:50.700
writable by any user on the system.

00:00:53.029 --> 00:00:57.833
In order to escalate our privileges,
we are going to add another superuser

00:00:57.833 --> 00:01:02.433
(root2) and a password
hash to the passwd file.

00:01:03.729 --> 00:01:06.133
We will first generate the password hash

00:01:06.133 --> 00:01:11.600
with the help of the openssl command
and the passwd argument.

00:01:11.825 --> 00:01:17.566
By default, openssl will generate
a hash using the crypt algorithm,

00:01:17.566 --> 00:01:20.833
which is supported for
Linux authentication.

00:01:21.960 --> 00:01:24.266
Once we have the generated hash,

00:01:24.266 --> 00:01:29.300
we will add a line to the passwd
file using the correct format:

00:01:30.483 --> 00:01:36.200
The “root2” user and the password
hash in our passwd file entry,

00:01:36.650 --> 00:01:42.433
are followed by the user and
the group IDs, both set to zero.

00:01:42.940 --> 00:01:47.766
These zero values specify that
the account is a superuser.

00:01:49.100 --> 00:01:52.500
Finally, in order to verify that
our modifications were valid,

00:01:52.500 --> 00:01:59.166
we use the su command to switch to
the newly created root2 account,

00:02:04.971 --> 00:02:07.666
and issue the id command,

00:02:09.432 --> 00:02:12.966
to show that we indeed
have root privileges.
