WEBVTT

00:00:01.162 --> 00:00:03.733
Vulnerability Scanning with Nmap

00:00:05.195 --> 00:00:09.933
As an alternative to Nessus, we can
also use the Nmap Scripting Engine

00:00:09.933 --> 00:00:13.033
to perform automated vulnerability scans.

00:00:13.558 --> 00:00:17.133
While the NSE is not a full-fledged
vulnerability scanner,

00:00:17.283 --> 00:00:20.566
it does have a respectable
library of scripts

00:00:20.566 --> 00:00:24.533
that can be used to detect
and validate vulnerabilities.

00:00:25.208 --> 00:00:29.566
NSE scripts range in functionality from
brute force and authentication

00:00:29.566 --> 00:00:32.633
 to detecting and
exploiting vulnerabilities.

00:00:33.170 --> 00:00:36.666
For our purposes, we will focus
on the scripts in the “vuln”

00:00:36.666 --> 00:00:38.533
and “exploit” categories,

00:00:38.533 --> 00:00:41.033
as the former detects a vulnerability

00:00:41.033 --> 00:00:43.400
and the latter attempts to exploit it.

00:00:43.850 --> 00:00:47.533
However, there is overlap
between these categories

00:00:47.533 --> 00:00:53.033
and some “vuln” scripts may essentially
run stripped-down exploits.

00:00:54.145 --> 00:00:57.766
For this reason, scripts are
also further categorized as

00:00:57.766 --> 00:00:59.700
“safe” or “intrusive”.

00:01:00.181 --> 00:01:03.333
We should take great care
when executing the latter

00:01:03.333 --> 00:01:08.000
because they may crash a remote
service or take down the target.

00:01:13.175 --> 00:01:17.966
On Kali, the NSE scripts can be
found in the nmap “scripts” directory.

00:01:18.266 --> 00:01:22.333
This folder also contains a script.db file

00:01:22.333 --> 00:01:25.300
that serves as an
index to all of the scripts.

00:01:28.225 --> 00:01:31.800
It also categorizes
each of the Nmap scripts.

00:01:35.200 --> 00:01:36.833
We could, for example,

00:01:36.833 --> 00:01:42.066
use the file to grep for scripts in the “vuln” and “exploit” categories.

00:01:44.129 --> 00:01:47.633
Let’s try to use an NSE script
to detect a vulnerability.

00:01:53.395 --> 00:01:56.566
For this example,
we will use “script vuln”

00:01:56.566 --> 00:02:02.066
to run all scripts in the “vuln” category
against a target in the labs.

00:02:09.216 --> 00:02:12.300
We see that one of the
NSE scripts successfully detected

00:02:12.300 --> 00:02:16.233
an Adobe Coldfusion
vulnerability on our target.

00:02:17.370 --> 00:02:20.966
This is rather interesting and
worth further investigation.

00:02:21.879 --> 00:02:25.766
While Nmap is not a vulnerability
scanner in the traditional sense,

00:02:25.766 --> 00:02:29.133
it can be very useful for similar tasks.

00:02:29.495 --> 00:02:33.312
However, Nmap also requires
heeding the same warnings

00:02:33.312 --> 00:02:36.700
applicable to traditional
vulnerability scanners.

00:02:41.375 --> 00:02:43.833
We must understand
what the scripts will

00:02:43.833 --> 00:02:48.066
and will not check for, the amount
of traffic the scripts will generate,

00:02:48.066 --> 00:02:52.400
and what potential dangers we may incur with each script.
