WEBVTT

00:00:01.955 --> 00:00:04.788
Process Control: ps and kill

00:00:05.721 --> 00:00:08.488
One of the most useful commands for
monitoring processes

00:00:08.488 --> 00:00:12.355
on almost any Unix-like operating
system is ps,

00:00:12.405 --> 00:00:15.238
which is short for process status.

00:00:15.671 --> 00:00:20.171
Unlike the jobs command, ps lists
processes system-wide,

00:00:20.171 --> 00:00:22.738
not only for the current terminal session.

00:00:23.338 --> 00:00:26.271
ps is considered a standard on
Unix-like OSes

00:00:26.271 --> 00:00:30.738
and its name is so well-recognized
that even on Windows PowerShell,

00:00:30.738 --> 00:00:35.738
ps is a predefined command alias for the
Get-Process cmdlet,

00:00:35.738 --> 00:00:38.505
which essentially serves the same purpose.

00:00:40.122 --> 00:00:41.488
As a penetration tester,

00:00:41.488 --> 00:00:45.488
one of the first things to check after
obtaining remote access to a system,

00:00:45.488 --> 00:00:49.188
is the software currently running
on the compromised machine.

00:00:49.488 --> 00:00:52.622
This could provide clues to help
elevate our privileges,

00:00:52.755 --> 00:00:54.889
or collect additional information,

00:00:54.889 --> 00:00:58.055
in order to acquire further access
into the network.

00:00:58.488 --> 00:01:02.221
As an example, let’s start the
Leafpad text editor.

00:01:08.255 --> 00:01:12.488
Now let’s try to find the leafpad
process ID from the command line

00:01:12.488 --> 00:01:14.588
using the ps command.

00:01:14.855 --> 00:01:17.621
We’ll run ps with the -ef options

00:01:17.621 --> 00:01:23.655
where ‘e’ selects all processes and
‘f’ displays a full format listing.

00:01:24.755 --> 00:01:29.421
Finding our Leafpad application in that
massive listing is definitely not easy,

00:01:29.421 --> 00:01:32.421
but since we know the application
name we are looking for,

00:01:32.671 --> 00:01:36.571
we can replace the -e switch with -C,

00:01:36.571 --> 00:01:38.705
and specify the command name,

00:01:38.705 --> 00:01:41.205
which is leafpad in our case.

00:01:41.938 --> 00:01:44.605
The process search has returned
a single result

00:01:44.605 --> 00:01:47.271
which contains Leafpad’s process ID.

00:01:48.472 --> 00:01:50.738
Take some time to explore the ps manual

00:01:50.738 --> 00:01:54.705
as it really is the Swiss Army knife
of process management.

00:01:55.038 --> 00:01:59.738
Let’s say we now want to stop the Leafpad
process without interacting with the GUI.

00:01:59.921 --> 00:02:02.188
The kill command can help us here,

00:02:02.455 --> 00:02:06.322
as its purpose is to send a specific
signal to a process.

00:02:06.505 --> 00:02:11.105
The kill command requires the PID of the
process we want to send the signal to.

00:02:11.455 --> 00:02:15.388
Since we’ve already gathered Leafpad’s
process ID, we can proceed.

00:02:16.438 --> 00:02:21.971
Because the default signal for kill is
SIGTERM (or request termination),

00:02:21.971 --> 00:02:24.705
our application has been terminated.

00:02:24.839 --> 00:02:28.505
We can verify this with ps
after killing Leafpad.
